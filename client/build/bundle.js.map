{"version":3,"sources":["webpack:///webpack/bootstrap d361ae60fe632cb9e2f5","webpack:///./src/app.js","webpack:///./src/services/request.js","webpack:///./src/views/countryView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d361ae60fe632cb9e2f5","const Request = require('./services/request.js');\nconst CountryView = require('./views/countryView');\n\nconst request = new Request(\"http://localhost:3000/api/countries\")\nconst countryView = new CountryView();\n\nvar app = function(){\nconst url = \"https://restcountries.eu/rest/v2/all\";\nmakeRequest(url, requestComplete);\n\nconst saveCountryButton = document.querySelector('#save-country');\nsaveCountryButton.addEventListener('click', saveCountryButtonClicked)\n\nconst deleteButton = document.querySelector('#deleteButton');\ndeleteButton.addEventListener('click', deleteButtonClicked);\n}\n\n\nconst makeRequest = function(url, callback) {\n  const request = new XMLHttpRequest();\n  request.open('GET', url);\n  request.send();\n  request.addEventListener('load', callback);\n};\n\n\nconst requestComplete = function() {\n  if (this.status !== 200) return;\n  const jsonString = this.responseText;\n  const countryData = JSON.parse(jsonString);\n  const select = document.querySelector('#all-countries-list');\n  select.addEventListener('change', function(){\n    let selectedCountry = countryData[this.value];\n  })\n  populateDropDown(countryData);\n}\n\nconst populateDropDown = function(country) {\n  const dropDown = document.querySelector('#all-countries-list');\n  country.forEach(function(country, index) {\n    const option = document.createElement('option');\n    option.value = country.name;\n    option.innerText = country.name;\n    dropDown.appendChild(option);\n  })\n}\n\nconst saveCountryButtonClicked = function(evt) {\n  const countryValue = document.querySelector('#all-countries-list').value;\n  const body = {\n    name: countryValue\n  }\n  request.post(saveCountryRequestComplete, body);\n}\n\nconst saveCountryRequestComplete = function(name) {\n  countryView.addCountry(name);\n}\n\n\nconst deleteButtonClicked = function(evt) {\n  console.log('delete button clicked');\n  request.delete(deleteRequestComplete);\n}\n\nconst deleteRequestComplete = function() {\n  countryView.clear();\n}\n\n\n\ndocument.addEventListener('DOMContentLoaded', app);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 0\n// module chunks = 0","const Request = function(url) {\n  this.url = url;\n}\n//making this pretty generic, si it can be re-usable\nRequest.prototype.get = function(callback) {\n  const request = new XMLHttpRequest();\n  request.open('GET', this.url);\n  request.addEventListener('load', function(){\n    if(this.status != 200) {\n      return;\n    }\n    const responseBody = JSON.parse(this.responseText);\n//responseBody will be allQuotes, this is dynamic - the callback can we\n//whatever you want it to be, single responsibilty obeyed\n    callback(responseBody);\n  });\n  //need to send it in here - at the very end of the function\n  request.send();\n}\n\nRequest.prototype.post = function(callback, body) {\n  const request = new XMLHttpRequest();\n  request.open('POST', this.url);\n  //sometimes we need to tell the server what we're giving it in a header, where\n  //the additional info lives/ insomnia did it all for us\n  //now we need to add a header in js\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.addEventListener('load', function(){\n    if(this.status != 201) {\n      return;\n    }\n    const responseBody = JSON.parse(this.responseText);\n    callback(responseBody);\n  });\n  //we need to pass the body but stringified, so another funciton doesn't\n  //need to worry about it, it's ready to go\n  request.send(JSON.stringify(body));\n}\n\nRequest.prototype.delete = function(callback) {\n  const request = new XMLHttpRequest();\n  request.open('DELETE', this.url);\n  request.addEventListener('load', function() {\n    if(this.status!==204) {\n      return;\n    }\n    callback();\n  });\n  request.send();\n}\n\nmodule.exports = Request;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/services/request.js\n// module id = 1\n// module chunks = 0","var CountryView = function(){\n  this.countries = [];\n}\n//everytime you add a country it adds it to the array and displays it\nCountryView.prototype.addCountry = function(country) {\n  this.countries.push(country);\n  this.render(country);\n}\n\nCountryView.prototype.clear = function(country) {\n  this.countries = [];\n  const ul = document.querySelector('#countries');\n  ul.innerHTML = '';\n}\n//all the appending in this one\nCountryView.prototype.render = function(country){\n    const ul = document.querySelector('#countries');\n    const liName = document.createElement('li');\n    liName.innerText = country.name;\n    ul.appendChild(liName);\n}\n\n module.exports = CountryView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/countryView.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}